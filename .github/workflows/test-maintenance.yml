name: PagerDuty Maintenance Window

on:
  workflow_dispatch:
    inputs:
      service_names:
        description: 'Custom name for service P1DF299'
        type: string
        default: 'Prod API'
        required: false
      service_names_2:
        description: 'Custom name for service PJ5CTRB'
        type: string
        default: 'Prod DB'
        required: false
      service_names_3:
        description: 'Custom name for service P86XAY9'
        type: string
        default: 'Prod Web'
        required: false
      service_names_4:
        description: 'Custom name for service PUTC765'
        type: string
        default: 'Prod Cache'
        required: false
      service_names_5:
        description: 'Custom name for service PYNFRNY'
        type: string
        default: 'Prod Queue'
        required: false
      service_names_6:
        description: 'Custom name for service PEA4386'
        type: string
        default: 'Prod Auth'
        required: false
      select_services:
        description: 'Choose services for maintenance'
        type: boolean
        default: false
        required: true
      service_P1DF299:
        description: ${{ inputs.service_names || 'Prod API' }}
        type: boolean
        required: false
      service_PJ5CTRB:
        description: ${{ inputs.service_names_2 || 'Prod DB' }}
        type: boolean
        required: false
      service_P86XAY9:
        description: ${{ inputs.service_names_3 || 'Prod Web' }}
        type: boolean
        required: false
      service_PUTC765:
        description: ${{ inputs.service_names_4 || 'Prod Cache' }}
        type: boolean
        required: false
      service_PYNFRNY:
        description: ${{ inputs.service_names_5 || 'Prod Queue' }}
        type: boolean
        required: false
      service_PEA4386:
        description: ${{ inputs.service_names_6 || 'Prod Auth' }}
        type: boolean
        required: false
      start_type:
        description: 'When to start the maintenance window'
        type: choice
        required: true
        options:
          - 'Start Immediately'
          - 'Schedule for Later'
      scheduled_start:
        description: 'If scheduling, enter start time (YYYY-MM-DD HH:mm) in UTC'
        required: false
        type: string
      duration_minutes:
        description: 'Duration in minutes'
        required: true
        type: number
        default: 15
      maintenance_description:
        description: 'Description of maintenance work'
        required: true
        type: string
        default: 'Scheduled maintenance window'

jobs:
  create-maintenance-window:
    runs-on: ubuntu-latest
    steps:
      - name: Process Selected Services
        id: services
        run: |
          selected_ids=()
          
          # Check if all services are selected
          if [[ "${{ inputs.select_services }}" == "true" ]]; then
            selected_ids=("P1DF299" "PJ5CTRB" "P86XAY9" "PUTC765" "PYNFRNY" "PEA4386")
          else
            # Add individual selections
            if [[ "${{ inputs.service_P1DF299 }}" == "true" ]]; then
              selected_ids+=("P1DF299")
            fi
            if [[ "${{ inputs.service_PJ5CTRB }}" == "true" ]]; then
              selected_ids+=("PJ5CTRB")
            fi
            if [[ "${{ inputs.service_P86XAY9 }}" == "true" ]]; then
              selected_ids+=("P86XAY9")
            fi
            if [[ "${{ inputs.service_PUTC765 }}" == "true" ]]; then
              selected_ids+=("PUTC765")
            fi
            if [[ "${{ inputs.service_PYNFRNY }}" == "true" ]]; then
              selected_ids+=("PYNFRNY")
            fi
            if [[ "${{ inputs.service_PEA4386 }}" == "true" ]]; then
              selected_ids+=("PEA4386")
            fi
          fi
          
          # Join service IDs with commas
          service_ids=$(IFS=,; echo "${selected_ids[*]}")
          echo "service_ids=$service_ids" >> $GITHUB_OUTPUT
          echo "Selected services: $service_ids"

      - name: Validate Inputs
        id: validate
        run: |
          if [[ "${{ inputs.start_type }}" == "Schedule for Later" && -z "${{ inputs.scheduled_start }}" ]]; then
            echo "Error: Scheduled start time is required when scheduling for later"
            exit 1
          fi
          
          if [[ -z "${{ steps.services.outputs.service_ids }}" ]]; then
            echo "Error: At least one service must be selected"
            exit 1
          fi

      - name: Create PagerDuty Maintenance Window
        id: maintenance-window
        uses: im-open/open-pagerduty-maintenance-window@v1.3.1
        with:
          pagerduty-api-key: ${{ secrets.PAGERDUTY_API_KEY }}
          service-ids: ${{ steps.services.outputs.service_ids }}
          description: ${{ inputs.maintenance_description }}
          minutes: ${{ inputs.duration_minutes }}
          start_time: ${{ inputs.start_type == 'Schedule for Later' && inputs.scheduled_start || '' }}

      - name: Output Window Details
        run: |
          echo "Maintenance Window ID: ${{ steps.maintenance-window.outputs.maintenance-window-id }}"
          echo "Selected Services: ${{ steps.services.outputs.service_ids }}"
          if [[ "${{ inputs.start_type }}" == "Schedule for Later" ]]; then
            echo "Scheduled Start Time: ${{ inputs.scheduled_start }} UTC"
          else
            echo "Started Immediately"
          fi
          echo "Duration: ${{ inputs.duration_minutes }} minutes"
