name: PagerDuty Maintenance Window

on:
  workflow_dispatch:
    inputs:
      start_type:
        description: 'When to start the maintenance window'
        type: choice
        required: true
        options:
          - 'Start Immediately'
          - 'Schedule for Later'
      scheduled_start:
        description: 'If scheduling, enter start time (YYYY-MM-DD HH:mm) in UTC'
        required: false
        type: string
      duration_minutes:
        description: 'Duration in minutes'
        required: true
        type: number
        default: 15
      selected_services:
        description: 'Select services for maintenance'
        required: true
        type: choice
        options:
          - "All Services"
          - "Prod API (P1DF299)"
          - "Prod DB (PJ5CTRB)"
          - "Prod Web (P86XAY9)"
          - "Prod Cache (PUTC765)"
          - "Prod Queue (PYNFRNY)"
          - "Prod Auth (PEA4386)"
        multiple: true
      maintenance_description:
        description: 'Description of maintenance work'
        required: true
        type: string
        default: 'Scheduled maintenance window'

jobs:
  create-maintenance-window:
    runs-on: ubuntu-latest
    steps:
      - name: Process Selected Services
        id: services
        run: |
          # Create a mapping of service names to IDs
          declare -A service_map
          service_map["Prod API"]="P1DF299"
          service_map["Prod DB"]="PJ5CTRB"
          service_map["Prod Web"]="P86XAY9"
          service_map["Prod Cache"]="PUTC765"
          service_map["Prod Queue"]="PYNFRNY"
          service_map["Prod Auth"]="PEA4386"
          
          # Initialize empty array for selected service IDs
          selected_ids=()
          
          # Process selections
          IFS=',' read -ra SERVICES <<< "${{ inputs.selected_services }}"
          for service in "${SERVICES[@]}"; do
            if [[ "$service" == "All Services" ]]; then
              # Add all service IDs
              for id in "${service_map[@]}"; do
                selected_ids+=("$id")
              done
              break
            else
              # Extract service name from the option (remove the ID part)
              service_name=$(echo "$service" | sed 's/ (.*)$//')
              if [[ -n "${service_map[$service_name]}" ]]; then
                selected_ids+=("${service_map[$service_name]}")
              fi
            fi
          done
          
          # Join service IDs with commas
          service_ids=$(IFS=,; echo "${selected_ids[*]}")
          echo "service_ids=$service_ids" >> $GITHUB_OUTPUT
          echo "Selected services: $service_ids"

      - name: Create PagerDuty Maintenance Window
        id: maintenance-window
        uses: im-open/open-pagerduty-maintenance-window@v1.3.1
        with:
          pagerduty-api-key: ${{ secrets.PAGERDUTY_API_KEY }}
          service-ids: ${{ steps.services.outputs.service_ids }}
          description: ${{ inputs.maintenance_description }}
          minutes: ${{ inputs.duration_minutes }}
          start_time: ${{ inputs.start_type == 'Schedule for Later' && inputs.scheduled_start || '' }}

      - name: Output Window Details
        run: |
          echo "Maintenance Window ID: ${{ steps.maintenance-window.outputs.maintenance-window-id }}"
          echo "Selected Services: ${{ steps.services.outputs.service_ids }}"
          if [[ "${{ inputs.start_type }}" == "Schedule for Later" ]]; then
            echo "Scheduled Start Time: ${{ inputs.scheduled_start }} UTC"
          else
            echo "Started Immediately"
          fi
          echo "Duration: ${{ inputs.duration_minutes }} minutes"
